apply plugin: 'download-task'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	compileJava {
		options.fork = true
		sourceCompatibility = "1.8"
		targetCompatibility = "1.8"
	}
}

def runDir = new File('run')
mainClassName = "xyz.hexagons.client.Main"
version = "0.1.0"

task runClient(dependsOn: 'classes', type: JavaExec) {
	main = mainClassName
	args 'noupdate'
	classpath = sourceSets.main.runtimeClasspath
}

buildscript {
    repositories {
        mavenCentral()
		jcenter()
        maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:1.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}


sourceSets {
    main {
        resources{
            srcDir 'resources'
        }
    }
}

repositories {
	mavenLocal()
    mavenCentral()
}

dependencies {
	compile 'com.google.guava:guava:18.0'
	compile 'com.google.code.gson:gson:2.3.1'
	compile 'com.typesafe:config:1.3.0'
	//Logging
	compile 'org.slf4j:slf4j-api:1.7.7'
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'ch.qos.logback:logback-core:1.1.2'
	compile 'uk.org.lidalia:sysout-over-slf4j:1.0.2'

	def gdx = '1.6.5'

	//LibGDX
	compile 'com.badlogicgames.gdx:gdx-backend-lwjgl:'+gdx
	compile 'com.badlogicgames.gdx:gdx:'+gdx
	compile 'com.badlogicgames.gdx:gdx-platform:'+gdx+':natives-desktop'
	compile 'com.badlogicgames.gdx:gdx-freetype:'+gdx
	compile 'com.badlogicgames.gdx:gdx-freetype-platform:'+gdx+':natives-desktop'
	compile 'org.luaj:luaj-jse:3.0.1'
}

shadowJar {
	exclude 'LICENSE'
	
	manifest {
		attributes("Implementation-Title": "Hexagons",  "Implementation-Version": version, "Implementation-Vendor": "Sebastian Krajewski (Wieku)", "Build-Number": new Date().format("yyyyMMddHHmmss"))
	}
}

compileJava {
	options.fork = true
	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"
}

task setUp() <<{
	if(!runDir.isDirectory())
		runDir.mkdirs()
}
